<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>
        <TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
        <RootNamespace>Bluechirp</RootNamespace>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <Platforms>x86;x64;ARM64</Platforms>
        <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
        <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
        <UseWinUI>true</UseWinUI>
        <EnableMsixTooling>true</EnableMsixTooling>
        <PackageCertificateThumbprint>8CFA06D7348A95A9E98CEEC2BDF400820F1E340D</PackageCertificateThumbprint>
        <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
        <SupportedOSPlatformVersion>10.0.20348.0</SupportedOSPlatformVersion>
        <WindowsSdkPackageVersion>10.0.22621.38</WindowsSdkPackageVersion>
        <UseRidGraph>true</UseRidGraph>
        <Nullable>enable</Nullable>
    </PropertyGroup>
    <ItemGroup>
        <None Remove="Assets\Icons\Tiles\MedTile.scale-125.png" />
        <None Remove="Assets\Icons\Tiles\MedTile.scale-150.png" />
        <None Remove="Assets\Icons\Tiles\MedTile.scale-400.png" />
        <None Remove="Assets\Icons\Tiles\SmallTile.scale-100.png" />
        <None Remove="Assets\Icons\Tiles\SmallTile.scale-125.png" />
        <None Remove="Assets\Icons\Tiles\SmallTile.scale-150.png" />
        <None Remove="Assets\Icons\Tiles\SmallTile.scale-200.png" />
        <None Remove="Assets\Icons\Tiles\SmallTile.scale-400.png" />
        <None Remove="Assets\Icons\Tiles\WideTile.scale-100.png" />
        <None Remove="Assets\Icons\Tiles\WideTile.scale-125.png" />
        <None Remove="Assets\Icons\Tiles\WideTile.scale-150.png" />
        <None Remove="Assets\Icons\Tiles\WideTile.scale-200.png" />
        <None Remove="Assets\Icons\Tiles\WideTile.scale-400.png" />
        <None Remove="Controls\MastodonTextControl.xaml" />
        <None Remove="Controls\TootControl.xaml" />
        <None Remove="Views\LoginPage.xaml" />
        <None Remove="Views\Navigation\TimelinePage.xaml" />
        <None Remove="Views\SettingsPage.xaml" />
        <None Remove="Views\ShellPage.xaml" />
        <None Remove="Views\SplashScreenPage.xaml" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AnalogFeelings.Matcha" Version="2.1.0" />
        <PackageReference Include="AngleSharp" Version="1.1.2" />
        <PackageReference Include="CommunityToolkit.WinUI.Controls.Primitives" Version="8.1.240821" />
        <PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" Version="8.1.240821" />
        <PackageReference Include="CommunityToolkit.WinUI.Converters" Version="8.1.240821" />
        <PackageReference Include="CommunityToolkit.WinUI.Extensions" Version="8.1.240821" />
        <PackageReference Include="Mastonet" Version="3.1.2" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
        <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.240829007" />
        <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.1" />
        <PackageReference Include="WinUIEx" Version="2.3.4" />
        <Manifest Include="$(ApplicationManifest)" />
    </ItemGroup>

    <!-- 
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
    <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
        <ProjectCapability Include="Msix" />
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Bluechirp.Library\Bluechirp.Library.csproj" />
    </ItemGroup>
    <ItemGroup>
      <Page Update="Controls\MastodonTextControl.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="Views\SettingsPage.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="Controls\TootControl.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
        <Page Update="Views\ShellPage.xaml">
            <Generator>MSBuild:Compile</Generator>
        </Page>
    </ItemGroup>
    <ItemGroup>
        <Page Update="Views\LoginPage.xaml">
            <Generator>MSBuild:Compile</Generator>
        </Page>
    </ItemGroup>
    <ItemGroup>
        <Page Update="Views\SplashScreenPage.xaml">
            <Generator>MSBuild:Compile</Generator>
        </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="Views\Navigation\TimelinePage.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|arm64'">
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|arm64'">
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
    </PropertyGroup>


    <!-- 
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution 
    Explorer "Package and Publish" context menu entry to be enabled for this project even if 
    the Windows App SDK Nuget package has not yet been restored.
  -->
    <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
        <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
    </PropertyGroup>
</Project>
